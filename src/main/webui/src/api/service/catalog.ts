/**
 * Generated by orval v7.8.0 🍺
 * Do not edit manually.
 * Homelab Manager API
 * OpenAPI spec version: 0.0.1
 */
import * as axios from "axios";
import type { AxiosRequestConfig, AxiosResponse } from "axios";

import type {
  GetApiMediaInfoTopWatchersParams,
  GetApiMediaInfoWhoWatchedParams,
  JsonObject,
  TopWatched,
  Unit,
  UserStatistics,
  WhoWatchedInfos,
} from "../model";

export const getHomelabManagerAPI = () => {
  /**
   * @summary Find out what's been watched the most in the last period
   */
  const getApiMediaInfoTopWatchedPeriod = <TData = AxiosResponse<TopWatched>>(
    period: string,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:8080/api/media-info/top-watched/${period}`,
      options,
    );
  };

  /**
   * @summary Find out who's watching the most
   */
  const getApiMediaInfoTopWatchers = <TData = AxiosResponse<UserStatistics[]>>(
    params?: GetApiMediaInfoTopWatchersParams,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:8080/api/media-info/top-watchers`,
      {
        ...options,
        params: { ...params, ...options?.params },
      },
    );
  };

  /**
   * @summary Find out who watched a tv show
   */
  const getApiMediaInfoWhoWatched = <TData = AxiosResponse<WhoWatchedInfos>>(
    params: GetApiMediaInfoWhoWatchedParams,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.get(
      `http://localhost:8080/api/media-info/who-watched`,
      {
        ...options,
        params: { ...params, ...options?.params },
      },
    );
  };

  /**
   * @summary Handle Incoming Notification
   */
  const postApiNotificationsIncomingSource = <TData = AxiosResponse<Unit>>(
    source: string,
    jsonObject: JsonObject,
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:8080/api/notifications/incoming/${source}`,
      jsonObject,
      options,
    );
  };

  /**
   * @summary Send Whats Next Report
   */
  const postApiNotificationsSendWhatsNextReport = <TData = AxiosResponse<Unit>>(
    options?: AxiosRequestConfig,
  ): Promise<TData> => {
    return axios.default.post(
      `http://localhost:8080/api/notifications/send-whats-next-report`,
      undefined,
      options,
    );
  };

  return {
    getApiMediaInfoTopWatchedPeriod,
    getApiMediaInfoTopWatchers,
    getApiMediaInfoWhoWatched,
    postApiNotificationsIncomingSource,
    postApiNotificationsSendWhatsNextReport,
  };
};
export type GetApiMediaInfoTopWatchedPeriodResult = AxiosResponse<TopWatched>;
export type GetApiMediaInfoTopWatchersResult = AxiosResponse<UserStatistics[]>;
export type GetApiMediaInfoWhoWatchedResult = AxiosResponse<WhoWatchedInfos>;
export type PostApiNotificationsIncomingSourceResult = AxiosResponse<Unit>;
export type PostApiNotificationsSendWhatsNextReportResult = AxiosResponse<Unit>;
